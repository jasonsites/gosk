version: '3.9'

networks:
  local-test:
    name: local-test
    driver: bridge

services:
  api:
    build:
      context: .
      dockerfile: ./testutils/Dockerfile
    command: bash -c 'while !</dev/tcp/domain_db/5432; do sleep 1; done; just server'
    depends_on:
      - db
      - redis
    environment:
      APP_ENV: dev
      HTTPAPI_MODE: test
      LOGGER_APP_ENABLED: true
      LOGGER_HTTP_ENABLED: true
      LOGGER_HTTP_LEVEL: debug
      LOGGER_DOMAIN_ENABLED: true
      LOGGER_REPO_ENABLED: true
      POSTGRES_DB: svcdb
      POSTGRES_HOST: domain_db
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_VERSION: 15
      REDIS_DB: 0
      REDIS_HOST: redis
      REDIS_PASSWORD: redis
      REDIS_PORT: 6379
      SVC_EXAMPLE_HOST: http://host.docker.internal:8000
    networks:
      - local-test
    ports:
      - 9204:9204
    volumes:
      - .:/app
      - /app/vendor

  domain_db:
    image: postgres:15.2-alpine
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_MULTIPLE_DATABASES: svcdb,testdb
    networks:
      - local-test
    ports:
      - 45432:5432
    volumes:
      # - ./database/scripts:/docker-entrypoint-initdb.d/
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7.0.8-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - local-test
    ports:
      - 46379:6379
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf

volumes:
  postgres-data:
